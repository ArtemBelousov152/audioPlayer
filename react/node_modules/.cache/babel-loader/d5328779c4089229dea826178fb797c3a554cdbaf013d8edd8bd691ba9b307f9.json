{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyApp`s\\\\Web\\\\ReactPractic\\\\open-media\\\\react\\\\src\\\\components\\\\player\\\\Player.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { playerSlice } from '../../store/reducers/playerSlice';\nimport { timeFormat } from '../../utils/timeFormat';\nimport Slider from '@mui/material/Slider';\nimport classNames from 'classnames';\nimport play from '../../assets/play.svg';\nimport pause from '../../assets/pause.svg';\nimport smallArrow from '../../assets/smallArrow.svg';\nimport './player.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player() {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songTime, setSongTime] = useState(0);\n  const [seconds, setSeconds] = useState('00');\n  const [minutes, setMinutes] = useState('00');\n  const [volume, setVolume] = useState(20);\n  const [duration, setDuration] = useState(0);\n  const [progress, setProgress] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const {\n    songLink\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const {\n    clearLink\n  } = playerSlice.actions;\n  const audioElem = useRef();\n  const playPause = () => {\n    setIsPlaying(isPlaying => !isPlaying);\n  };\n  useEffect(() => {\n    if (isPlaying === false && audioElem.current.networkState === 2) {\n      setLoading(true);\n    }\n    if (isPlaying === true) {\n      setLoading(false);\n    }\n  }, [isPlaying]);\n  useEffect(() => {\n    audioElem.current.volume = volume / 100;\n  }, [volume]);\n  useEffect(() => {\n    if (isPlaying) {\n      audioElem.current.play();\n    } else {\n      audioElem.current.pause();\n    }\n  }, [isPlaying]);\n  const onPlaying = () => {\n    const ct = Math.floor(audioElem.current.currentTime);\n    const time = ct / duration * 100;\n    if (!isNaN(time) && time !== Infinity) {\n      setProgress(time);\n    } else if (time === Infinity) {\n      setProgress(100);\n    }\n    if (ct !== songTime) {\n      setSongTime(ct);\n      setSeconds(state => {\n        if (+state + 1 === 60) {\n          setMinutes(state => timeFormat(+state + 1));\n          return '00';\n        }\n        return timeFormat(+state + 1);\n      });\n    }\n    if (audioElem.current.duration === Infinity || isNaN(audioElem.current.duration)) {\n      return;\n    } else {\n      setDuration(audioElem.current.duration);\n    }\n  };\n  const changeVolume = (event, value) => {\n    setVolume(value);\n  };\n  const backToInput = () => {\n    dispatch(clearLink());\n  };\n  const loaderClass = classNames({\n    'player__loader_animated': loading\n  });\n  const onProgressChange = (event, value) => {\n    if (duration === 0) {\n      return;\n    }\n    setIsPlaying(false);\n    setProgress(value);\n    let newTime = duration * (value / 100);\n    let newMinutes = 0;\n    let newSeconds = 0;\n    audioElem.current.currentTime = newTime;\n    if (newTime > 60) {\n      while (newTime > 60) {\n        newMinutes += 1;\n        newTime -= 60;\n      }\n    }\n    newSeconds = timeFormat(Math.floor(newTime));\n    newMinutes = timeFormat(newMinutes);\n    setSeconds(newSeconds);\n    setMinutes(newMinutes);\n  };\n  const onProgressChangeCommitted = (event, value) => {\n    if (duration === 0) {\n      return;\n    }\n    setIsPlaying(true);\n  };\n\n  // const preventHorizontalKeyboardNavigation = (e) => {\n  //     if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n  //         e.preventDefault();\n  //       }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"music\",\n      src: songLink,\n      ref: audioElem,\n      onTimeUpdate: onPlaying,\n      preload: \"metadata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player__wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: '/',\n        className: \"player__back\",\n        onClick: backToInput,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: smallArrow,\n          alt: \"arrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), \"Back\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `player__loader ${loaderClass}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player__btn\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: isPlaying ? pause : play,\n            alt: \"play\",\n            onClick: playPause\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player__progress\",\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            value: progress,\n            onChange: onProgressChange,\n            onChangeCommitted: onProgressChangeCommitted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player__footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player__time\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"minutes\",\n              children: minutes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"seconds\",\n              children: seconds\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player__volume\",\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              onChange: changeVolume,\n              value: volume\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n}\n_s(Player, \"meu+RWxQvn8NgZL6b3xV7d2fK0Y=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["useEffect","useRef","useState","useSelector","useDispatch","Link","playerSlice","timeFormat","Slider","classNames","play","pause","smallArrow","jsxDEV","_jsxDEV","Player","_s","isPlaying","setIsPlaying","songTime","setSongTime","seconds","setSeconds","minutes","setMinutes","volume","setVolume","duration","setDuration","progress","setProgress","loading","setLoading","songLink","state","dispatch","clearLink","actions","audioElem","playPause","current","networkState","onPlaying","ct","Math","floor","currentTime","time","isNaN","Infinity","changeVolume","event","value","backToInput","loaderClass","onProgressChange","newTime","newMinutes","newSeconds","onProgressChangeCommitted","className","children","id","src","ref","onTimeUpdate","preload","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","alt","onChange","onChangeCommitted","_c","$RefreshReg$"],"sources":["D:/MyApp`s/Web/ReactPractic/open-media/react/src/components/player/Player.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { playerSlice } from '../../store/reducers/playerSlice';\nimport { timeFormat } from '../../utils/timeFormat';\nimport Slider from '@mui/material/Slider';\nimport classNames from 'classnames';\n\nimport play from '../../assets/play.svg';\nimport pause from '../../assets/pause.svg';\nimport smallArrow from '../../assets/smallArrow.svg';\n\nimport './player.scss';\n\nexport default function Player() {\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [songTime, setSongTime] = useState(0);\n    const [seconds, setSeconds] = useState('00');\n    const [minutes, setMinutes] = useState('00');\n    const [volume, setVolume] = useState(20);\n    const [duration, setDuration] = useState(0);\n    const [progress, setProgress] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    const { songLink } = useSelector(state => state);\n    const dispatch = useDispatch();\n    const { clearLink } = playerSlice.actions;\n\n    const audioElem = useRef();\n\n    const playPause = () => {\n        setIsPlaying(isPlaying => !isPlaying);\n    }\n\n    useEffect(() => {\n        if (isPlaying === false && audioElem.current.networkState === 2) {\n            setLoading(true);\n        }\n\n        if (isPlaying === true) {\n            setLoading(false);\n        }\n\n    }, [isPlaying]);\n\n    useEffect(() => {\n        audioElem.current.volume = volume / 100;\n    }, [volume]);\n\n    useEffect(() => {\n        if (isPlaying) {\n            audioElem.current.play();\n        } else {\n            audioElem.current.pause();\n        }\n    }, [isPlaying]);\n\n    const onPlaying = () => {\n        const ct = Math.floor(audioElem.current.currentTime);\n        const time = (ct / duration * 100)\n\n        if (!isNaN(time) && time !== Infinity) {\n            setProgress(time);\n        } else if (time === Infinity) {\n            setProgress(100);\n        }\n\n\n        if (ct !== songTime) {\n            setSongTime(ct);\n            setSeconds(state => {\n                if (+state + 1 === 60) {\n                    setMinutes(state => timeFormat(+state + 1));\n                    return '00';\n                }\n\n                return timeFormat(+state + 1);\n            })\n        }\n\n\n        if (audioElem.current.duration === Infinity || isNaN(audioElem.current.duration)) {\n            return;\n        } else {\n            setDuration(audioElem.current.duration);\n        }\n    }\n\n    const changeVolume = (event, value) => {\n        setVolume(value);\n    }\n\n    const backToInput = () => {\n        dispatch(clearLink());\n    }\n\n    const loaderClass = classNames({\n        'player__loader_animated': loading\n    })\n\n    const onProgressChange = (event, value) => {\n        if (duration === 0) {\n            return;\n        }\n\n        setIsPlaying(false);\n        setProgress(value);\n\n        let newTime = duration * (value / 100);\n        let newMinutes = 0;\n        let newSeconds = 0;\n\n        audioElem.current.currentTime = newTime;\n\n        if (newTime > 60) {\n            while (newTime > 60) {\n                newMinutes += 1;\n                newTime -= 60;\n            }\n        }\n\n        newSeconds = timeFormat(Math.floor(newTime));\n        newMinutes = timeFormat(newMinutes);\n\n        setSeconds(newSeconds);\n        setMinutes(newMinutes);\n    }\n\n    const onProgressChangeCommitted = (event, value) => {\n        if (duration === 0) {\n            return;\n        }\n\n        setIsPlaying(true);\n    }\n\n    // const preventHorizontalKeyboardNavigation = (e) => {\n    //     if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n    //         e.preventDefault();\n    //       }\n    // }\n\n    return (\n        <div className=\"player\">\n            <audio\n                id=\"music\"\n                src={songLink}\n                ref={audioElem}\n                onTimeUpdate={onPlaying}\n                preload='metadata' />\n            <div className=\"player__wrapper\">\n                <Link\n                    to={'/'}\n                    className=\"player__back\"\n                    onClick={backToInput}\n                >\n                    <img src={smallArrow} alt=\"arrow\" />\n                    Back\n                </Link>\n                <div className=\"player__container\">\n                    <div className={`player__loader ${loaderClass}`}></div>\n                    <div className=\"player__btn\">\n                        <img\n                            src={isPlaying ? pause : play}\n                            alt=\"play\"\n                            onClick={playPause} />\n                    </div>\n                    <div className=\"player__progress\">\n                        <Slider\n                            value={progress}\n                            onChange={onProgressChange}\n                            onChangeCommitted={onProgressChangeCommitted}\n                        />\n                    </div>\n                    <div className=\"player__footer\">\n                        <div className=\"player__time\">\n                            <span id='minutes'>{minutes}</span>\n                            :\n                            <span id='seconds'>{seconds}</span>\n                        </div>\n                        <div className=\"player__volume\">\n                            <Slider\n                                onChange={changeVolume}\n                                value={volume} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}