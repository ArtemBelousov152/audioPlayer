{"ast":null,"code":"var _jsxFileName = \"C:\\\\My App`s\\\\audioPlayer\\\\react\\\\src\\\\components\\\\player\\\\Player.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { timeFormat } from '../../utils/timeFormat';\nimport Slider from '@mui/material/Slider';\nimport classNames from 'classnames';\nimport { playerSlice } from '../../store/reducers/playerSlice';\nimport play from '../../assets/play.svg';\nimport pause from '../../assets/pause.svg';\nimport './player.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player(_ref) {\n  _s();\n  let {\n    playerNumber\n  } = _ref;\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songTime, setSongTime] = useState(0);\n  const [seconds, setSeconds] = useState('00');\n  const [minutes, setMinutes] = useState('00');\n  const [volume, setVolume] = useState(20);\n  const [duration, setDuration] = useState(0);\n  const [progress, setProgress] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const {\n    songLink,\n    activePlayer\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const {\n    setActivePlayer\n  } = playerSlice.actions;\n  const audioElem = useRef();\n  const playPause = () => {\n    dispatch(setActivePlayer(playerNumber));\n    setIsPlaying(isPlaying => !isPlaying);\n  };\n  useEffect(() => {\n    let checkLoading;\n    if (isPlaying === false && audioElem.current.networkState === 2) {\n      setLoading(true);\n      checkLoading = setTimeout(() => {\n        if (audioElem.current.networkState === 2) {\n          console.log('load');\n          return;\n        }\n        if (audioElem.current.networkState !== 2) {\n          console.log('noload');\n          setLoading(false);\n          clearTimeout(checkLoading);\n        }\n      }, 500);\n    }\n    if (isPlaying === true) {\n      clearTimeout(checkLoading);\n      setLoading(false);\n    }\n  }, [isPlaying]);\n  useEffect(() => {\n    audioElem.current.volume = volume / 100;\n  }, [volume]);\n  useEffect(() => {\n    if (activePlayer === playerNumber) {\n      setIsPlaying(true);\n    }\n    if (activePlayer !== playerNumber) {\n      setIsPlaying(false);\n    }\n  }, [activePlayer]);\n  useEffect(() => {\n    if (isPlaying && activePlayer === playerNumber) {\n      audioElem.current.play();\n    } else {\n      audioElem.current.pause();\n    }\n  }, [isPlaying]);\n  const onPlaying = () => {\n    const ct = Math.floor(audioElem.current.currentTime);\n    const time = ct / duration * 100;\n    if (!isNaN(time) && time !== Infinity) {\n      setProgress(time);\n    } else if (time === Infinity) {\n      setProgress(100);\n    }\n    if (ct !== songTime) {\n      setSongTime(ct);\n      setSeconds(state => {\n        if (+state + 1 === 60) {\n          setMinutes(state => timeFormat(+state + 1));\n          return '00';\n        }\n        return timeFormat(+state + 1);\n      });\n    }\n    if (audioElem.current.duration === Infinity || isNaN(audioElem.current.duration)) {\n      return;\n    } else {\n      setDuration(audioElem.current.duration);\n    }\n  };\n  const changeVolume = (event, value) => {\n    setVolume(value);\n  };\n  const loaderClass = classNames({\n    'player__loader_animated': loading\n  });\n  const onProgressChange = (event, value) => {\n    if (duration === 0) {\n      return;\n    }\n    setIsPlaying(false);\n    setProgress(value);\n    let newTime = duration * (value / 100);\n    let newMinutes = 0;\n    let newSeconds = 0;\n    audioElem.current.currentTime = newTime;\n    if (newTime > 60) {\n      while (newTime > 60) {\n        newMinutes += 1;\n        newTime -= 60;\n      }\n    }\n    newSeconds = timeFormat(Math.floor(newTime));\n    newMinutes = timeFormat(newMinutes);\n    setSeconds(newSeconds);\n    setMinutes(newMinutes);\n  };\n  const onProgressChangeCommitted = (event, value) => {\n    if (duration === 0) {\n      return;\n    }\n    setIsPlaying(true);\n  };\n\n  // const preventHorizontalKeyboardNavigation = (e) => {\n  //     if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n  //         e.preventDefault();\n  //       }\n  // }\n\n  // const preventHorizontalKeyboardNavigation = (e) => {\n  //     if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n  //         e.preventDefault();\n  //       }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"music\",\n      src: songLink,\n      ref: audioElem,\n      onTimeUpdate: onPlaying,\n      preload: \"metadata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player__wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `player__loader ${loaderClass}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player__btn\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: isPlaying ? pause : play,\n            alt: \"play\",\n            onClick: playPause\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player__progress\",\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            value: progress,\n            onChange: onProgressChange,\n            onChangeCommitted: onProgressChangeCommitted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player__footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player__time\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"minutes\",\n              children: minutes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"seconds\",\n              children: seconds\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player__volume\",\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              onChange: changeVolume,\n              value: volume\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n}\n_s(Player, \"mtcPy2VVM5qjI4ZrmMsOl+/avto=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["useEffect","useRef","useState","useSelector","useDispatch","timeFormat","Slider","classNames","playerSlice","play","pause","jsxDEV","_jsxDEV","Player","_ref","_s","playerNumber","isPlaying","setIsPlaying","songTime","setSongTime","seconds","setSeconds","minutes","setMinutes","volume","setVolume","duration","setDuration","progress","setProgress","loading","setLoading","songLink","activePlayer","state","dispatch","setActivePlayer","actions","audioElem","playPause","checkLoading","current","networkState","setTimeout","console","log","clearTimeout","onPlaying","ct","Math","floor","currentTime","time","isNaN","Infinity","changeVolume","event","value","loaderClass","onProgressChange","newTime","newMinutes","newSeconds","onProgressChangeCommitted","className","children","id","src","ref","onTimeUpdate","preload","fileName","_jsxFileName","lineNumber","columnNumber","alt","onClick","onChange","onChangeCommitted","_c","$RefreshReg$"],"sources":["C:/My App`s/audioPlayer/react/src/components/player/Player.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { timeFormat } from '../../utils/timeFormat';\r\nimport Slider from '@mui/material/Slider';\r\nimport classNames from 'classnames';\r\nimport { playerSlice } from '../../store/reducers/playerSlice';\r\n\r\nimport play from '../../assets/play.svg';\r\nimport pause from '../../assets/pause.svg';\r\n\r\nimport './player.scss';\r\n\r\nexport default function Player({ playerNumber }) {\r\n    const [isPlaying, setIsPlaying] = useState(false);\r\n    const [songTime, setSongTime] = useState(0);\r\n    const [seconds, setSeconds] = useState('00');\r\n    const [minutes, setMinutes] = useState('00');\r\n    const [volume, setVolume] = useState(20);\r\n    const [duration, setDuration] = useState(0);\r\n    const [progress, setProgress] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { songLink, activePlayer } = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n    const { setActivePlayer } = playerSlice.actions;\r\n\r\n    const audioElem = useRef();\r\n\r\n    const playPause = () => {\r\n        dispatch(setActivePlayer(playerNumber));\r\n        setIsPlaying(isPlaying => !isPlaying);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let checkLoading;\r\n        if (isPlaying === false && audioElem.current.networkState === 2) {\r\n            setLoading(true);\r\n            checkLoading = setTimeout(() => {\r\n                if (audioElem.current.networkState === 2) {\r\n                    console.log('load');\r\n                    return;\r\n                }\r\n\r\n                if (audioElem.current.networkState !== 2) {\r\n                    console.log('noload');\r\n                    setLoading(false);\r\n                    clearTimeout(checkLoading);\r\n                }\r\n            }, 500)\r\n        }\r\n\r\n        if (isPlaying === true) {\r\n            clearTimeout(checkLoading);\r\n            setLoading(false);\r\n        }\r\n\r\n    }, [isPlaying]);\r\n\r\n    useEffect(() => {\r\n        audioElem.current.volume = volume / 100;\r\n    }, [volume]);\r\n\r\n    useEffect(() => {\r\n        if (activePlayer === playerNumber) {\r\n            setIsPlaying(true);\r\n        }\r\n\r\n        if (activePlayer !== playerNumber) {\r\n            setIsPlaying(false);\r\n        }\r\n    }, [activePlayer])\r\n\r\n    useEffect(() => {\r\n        if (isPlaying && activePlayer === playerNumber) {\r\n            audioElem.current.play();\r\n        } else {\r\n            audioElem.current.pause();\r\n        }\r\n    }, [isPlaying]);\r\n\r\n    const onPlaying = () => {\r\n        const ct = Math.floor(audioElem.current.currentTime);\r\n        const time = (ct / duration * 100)\r\n\r\n        if (!isNaN(time) && time !== Infinity) {\r\n            setProgress(time);\r\n        } else if (time === Infinity) {\r\n            setProgress(100);\r\n        }\r\n\r\n\r\n        if (ct !== songTime) {\r\n            setSongTime(ct);\r\n            setSeconds(state => {\r\n                if (+state + 1 === 60) {\r\n                    setMinutes(state => timeFormat(+state + 1));\r\n                    return '00';\r\n                }\r\n\r\n                return timeFormat(+state + 1);\r\n            })\r\n        }\r\n\r\n\r\n        if (audioElem.current.duration === Infinity || isNaN(audioElem.current.duration)) {\r\n            return;\r\n        } else {\r\n            setDuration(audioElem.current.duration);\r\n        }\r\n    }\r\n\r\n    const changeVolume = (event, value) => {\r\n        setVolume(value);\r\n    }\r\n\r\n    const loaderClass = classNames({\r\n        'player__loader_animated': loading\r\n    })\r\n\r\n    const onProgressChange = (event, value) => {\r\n        if (duration === 0) {\r\n            return;\r\n        }\r\n\r\n        setIsPlaying(false);\r\n        setProgress(value);\r\n\r\n        let newTime = duration * (value / 100);\r\n        let newMinutes = 0;\r\n        let newSeconds = 0;\r\n\r\n        audioElem.current.currentTime = newTime;\r\n\r\n        if (newTime > 60) {\r\n            while (newTime > 60) {\r\n                newMinutes += 1;\r\n                newTime -= 60;\r\n            }\r\n        }\r\n\r\n        newSeconds = timeFormat(Math.floor(newTime));\r\n        newMinutes = timeFormat(newMinutes);\r\n\r\n        setSeconds(newSeconds);\r\n        setMinutes(newMinutes);\r\n    }\r\n\r\n    const onProgressChangeCommitted = (event, value) => {\r\n        if (duration === 0) {\r\n            return;\r\n        }\r\n\r\n        setIsPlaying(true);\r\n    }\r\n\r\n    // const preventHorizontalKeyboardNavigation = (e) => {\r\n    //     if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\r\n    //         e.preventDefault();\r\n    //       }\r\n    // }\r\n\r\n    // const preventHorizontalKeyboardNavigation = (e) => {\r\n    //     if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\r\n    //         e.preventDefault();\r\n    //       }\r\n    // }\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <audio\r\n                id=\"music\"\r\n                src={songLink}\r\n                ref={audioElem}\r\n                onTimeUpdate={onPlaying}\r\n                preload='metadata' />\r\n            <div className=\"player__wrapper\">\r\n                <div className=\"player__container\">\r\n                    <div className={`player__loader ${loaderClass}`}></div>\r\n                    <div className=\"player__btn\">\r\n                        <img\r\n                            src={isPlaying ? pause : play}\r\n                            alt=\"play\"\r\n                            onClick={playPause} />\r\n                    </div>\r\n                    <div className=\"player__progress\">\r\n                        <Slider\r\n                            value={progress}\r\n                            onChange={onProgressChange}\r\n                            onChangeCommitted={onProgressChangeCommitted}\r\n                        />\r\n                    </div>\r\n                    <div className=\"player__footer\">\r\n                        <div className=\"player__time\">\r\n                            <span id='minutes'>{minutes}</span>\r\n                            :\r\n                            <span id='seconds'>{seconds}</span>\r\n                        </div>\r\n                        <div className=\"player__volume\">\r\n                            <Slider\r\n                                onChange={changeVolume}\r\n                                value={volume} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}